
db.Students.insert({name: "Briney Spears", home_state: "Kentucky", lucky_number: 5, birthday: {month: 2, day: 14, year: 1990}})


 1. Create a database called 'my_first_db'.
	use my_first_db

 2. Create students collection.
	db.createCollection("Students")

3.  Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
    Create 5 students with the appropriate info.
	db.Students.insert({name: "Britney Spears", home_state: "Kentucky", lucky_number: 5, birthday: {month: 2, day: 14, year: 1990}})
	db.Students.insert({name: "Mia Helmick", home_state: "Virginia", lucky_number: 2015, birthday: {month: 3, day: 17, year: 1985}})
	db.Students.insert({name: "Kenny Yeow", home_state: "Oregon", lucky_number: 52, birthday: {month: 5, day: 4, year: 1995}})
	db.Students.insert({name: "Annette Andersons", home_state: "california", lucky_number: 9, birthday: {month: 7, day: 15, year: 1999}})
	db.Students.insert({name: "Cecelia Marie", home_state: "Michigan", lucky_number: 6, birthday: {month: 7, day: 15, year: 2005}})

 4. Get all students.
	db.Students.find({})
	db.Students.find()
	db.Students.find().pretty()
5. Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
	db.Students.find({home_state: {$in: ["Michigan", "california"]}}).pretty()
	
6. Get all students whose lucky number is greater than 3
	db.Students.find({lucky_number: {$gt: 3}}).pretty()

7. Get all students whose lucky number is less than or equal to 10
	db.Students.find({lucky_number: {$lte: 10}}).pretty()

8. Get all students whose lucky number is between 1 and 9 (inclusive)
	db.Students.find({lucky_number: {$lte: 9, $gte: 1}}).pretty()

9. Add a field to each student collection called 'interests' that is an ARRAY. It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
	db.Students.updateMany({}, {$set: {interest: ['coding', 'brunch', 'MongoDB']}})

10. Add some unique interests for each particular student into each of their interest arrays.
	db.Students.update({name: "Britney Spears"}, {$push: {interest: "hiking"}})
	db.Students.update({name: "Mia Helmick"}, {$push: {interest: "drawing"}})
	db.Students.update({name: "Kenny Yeow"}, {$push: {interest: "basketball"}})
	db.Students.update({name: "Annette Andersons"}, {$push: {interest: "swimming"}})
	db.Students.update({name: "Cecelia Marie"}, {$push: {interest: "reading"}})

11. Add the interest 'taxes' into someone's interest array.
	db.Students.update({name: "Cecelia Marie"}, {$push: {interest: "taxes"}})
	
12. Remove the 'taxes' interest you just added.
	db.Students.update({name: "Cecelia Marie"}, {$pop: {interest: 1}})

13. Remove all students who are from California.
	db.Students.remove({home_state: "california"})

14. Remove a student by name.
	db.Students.remove({name: "Kenny Yeow"}, true)

15. Remove a student whose lucky number is greater than 5 (JUST ONE)
	db.Students.remove({lucky_number: {$gt: 5}}, true)

16. Add a field to each student collection called 'number_of_belts' and set it to 0.
	db.Students.updateMany({}, {$set: {number_of_belts: 0}})

17. Increment this field by 1 for all students in Washington (Seattle Dojo).
	db.Students.updateMany({home_state: "Michigan"}, {$inc: {number_of_belts: 1}})
	
18. Rename the 'number_of_belts' field to 'belts_earned'
	db.Students.updateMany({},{$rename: {number_of_belts: "belts_earned"}})
	
19. Remove the 'lucky_number' field.
	db.Students.aggregate([{$unset: "lucky_number"}]): to return a filtered set of data with "lucky_number" being excluded. The real record is not changed.
	db.Students.update({}, {$unset: {lucky_number: ""}},{ multi: true }) : to delete field name "lucky_number" in the whole Students collection

20. Add a 'updated_on' field, and set the value as the current date.
	db.Students.updateMany({}, {$set: {updated_on: new Date() }})

21. Rename the collection from Students to students.
	db.Students.renameCollection("students")